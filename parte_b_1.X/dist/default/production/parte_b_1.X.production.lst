

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Fri Apr 23 18:16:30 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    11                           	dabs	1,0x7E,2
    12  0000                     
    13                           ; Version 2.20
    14                           ; Generated 12/02/2020 GMT
    15                           ; 
    16                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    17                           ; All rights reserved.
    18                           ; 
    19                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    20                           ; 
    21                           ; Redistribution and use in source and binary forms, with or without modification, are
    22                           ; permitted provided that the following conditions are met:
    23                           ; 
    24                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    25                           ;        conditions and the following disclaimer.
    26                           ; 
    27                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    28                           ;        of conditions and the following disclaimer in the documentation and/or other
    29                           ;        materials provided with the distribution.
    30                           ; 
    31                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    32                           ;        software without specific prior written permission.
    33                           ; 
    34                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    35                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    36                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    37                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    38                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    39                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    40                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    41                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    42                           ; 
    43                           ; 
    44                           ; Code-generator required, PIC16F877A Definitions
    45                           ; 
    46                           ; SFR Addresses
    47  0000                     	;# 
    48  0001                     	;# 
    49  0002                     	;# 
    50  0003                     	;# 
    51  0004                     	;# 
    52  0005                     	;# 
    53  0006                     	;# 
    54  0007                     	;# 
    55  0008                     	;# 
    56  0009                     	;# 
    57  000A                     	;# 
    58  000B                     	;# 
    59  000C                     	;# 
    60  000D                     	;# 
    61  000E                     	;# 
    62  000E                     	;# 
    63  000F                     	;# 
    64  0010                     	;# 
    65  0011                     	;# 
    66  0012                     	;# 
    67  0013                     	;# 
    68  0014                     	;# 
    69  0015                     	;# 
    70  0015                     	;# 
    71  0016                     	;# 
    72  0017                     	;# 
    73  0018                     	;# 
    74  0019                     	;# 
    75  001A                     	;# 
    76  001B                     	;# 
    77  001B                     	;# 
    78  001C                     	;# 
    79  001D                     	;# 
    80  001E                     	;# 
    81  001F                     	;# 
    82  0081                     	;# 
    83  0085                     	;# 
    84  0086                     	;# 
    85  0087                     	;# 
    86  0088                     	;# 
    87  0089                     	;# 
    88  008C                     	;# 
    89  008D                     	;# 
    90  008E                     	;# 
    91  0091                     	;# 
    92  0092                     	;# 
    93  0093                     	;# 
    94  0094                     	;# 
    95  0098                     	;# 
    96  0099                     	;# 
    97  009C                     	;# 
    98  009D                     	;# 
    99  009E                     	;# 
   100  009F                     	;# 
   101  010C                     	;# 
   102  010D                     	;# 
   103  010E                     	;# 
   104  010F                     	;# 
   105  018C                     	;# 
   106  018D                     	;# 
   107  0000                     	;# 
   108  0001                     	;# 
   109  0002                     	;# 
   110  0003                     	;# 
   111  0004                     	;# 
   112  0005                     	;# 
   113  0006                     	;# 
   114  0007                     	;# 
   115  0008                     	;# 
   116  0009                     	;# 
   117  000A                     	;# 
   118  000B                     	;# 
   119  000C                     	;# 
   120  000D                     	;# 
   121  000E                     	;# 
   122  000E                     	;# 
   123  000F                     	;# 
   124  0010                     	;# 
   125  0011                     	;# 
   126  0012                     	;# 
   127  0013                     	;# 
   128  0014                     	;# 
   129  0015                     	;# 
   130  0015                     	;# 
   131  0016                     	;# 
   132  0017                     	;# 
   133  0018                     	;# 
   134  0019                     	;# 
   135  001A                     	;# 
   136  001B                     	;# 
   137  001B                     	;# 
   138  001C                     	;# 
   139  001D                     	;# 
   140  001E                     	;# 
   141  001F                     	;# 
   142  0081                     	;# 
   143  0085                     	;# 
   144  0086                     	;# 
   145  0087                     	;# 
   146  0088                     	;# 
   147  0089                     	;# 
   148  008C                     	;# 
   149  008D                     	;# 
   150  008E                     	;# 
   151  0091                     	;# 
   152  0092                     	;# 
   153  0093                     	;# 
   154  0094                     	;# 
   155  0098                     	;# 
   156  0099                     	;# 
   157  009C                     	;# 
   158  009D                     	;# 
   159  009E                     	;# 
   160  009F                     	;# 
   161  010C                     	;# 
   162  010D                     	;# 
   163  010E                     	;# 
   164  010F                     	;# 
   165  018C                     	;# 
   166  018D                     	;# 
   167  0006                     _PORTB	set	6
   168  000B                     _INTCONbits	set	11
   169  0018                     _RCSTAbits	set	24
   170  0006                     _PORTBbits	set	6
   171  000C                     _PIR1bits	set	12
   172  0019                     _TXREG	set	25
   173  0086                     _TRISB	set	134
   174  0086                     _TRISBbits	set	134
   175  008C                     _PIE1bits	set	140
   176  0098                     _TXSTAbits	set	152
   177                           
   178                           	psect	strings
   179  0003                     __pstrings:
   180  0003                     stringtab:
   181  0003                     __stringtab:
   182  0003                     stringcode:	
   183                           ;	String table - string pointers are 1 byte each
   184                           
   185  0003                     stringdir:
   186  0003  3000               	movlw	high stringdir
   187  0004  008A               	movwf	10
   188  0005  0804               	movf	4,w
   189  0006  0A84               	incf	4,f
   190  0007  0782               	addwf	2,f
   191  0008                     __stringbase:
   192  0008  3400               	retlw	0
   193  0009                     __end_of__stringtab:
   194  0009                     STR_1:
   195  0009  3453               	retlw	83	;'S'
   196  000A  3431               	retlw	49	;'1'
   197  000B  3420               	retlw	32	;' '
   198  000C  3470               	retlw	112	;'p'
   199  000D  3472               	retlw	114	;'r'
   200  000E  3465               	retlw	101	;'e'
   201  000F  3473               	retlw	115	;'s'
   202  0010  3473               	retlw	115	;'s'
   203  0011  3469               	retlw	105	;'i'
   204  0012  346F               	retlw	111	;'o'
   205  0013  346E               	retlw	110	;'n'
   206  0014  3461               	retlw	97	;'a'
   207  0015  3464               	retlw	100	;'d'
   208  0016  3461               	retlw	97	;'a'
   209  0017  340A               	retlw	10
   210  0018  3400               	retlw	0
   211  0019                     STR_3:
   212  0019  3453               	retlw	83	;'S'
   213  001A  3432               	retlw	50	;'2'
   214  001B  3420               	retlw	32	;' '
   215  001C  3470               	retlw	112	;'p'
   216  001D  3472               	retlw	114	;'r'
   217  001E  3465               	retlw	101	;'e'
   218  001F  3473               	retlw	115	;'s'
   219  0020  3473               	retlw	115	;'s'
   220  0021  3469               	retlw	105	;'i'
   221  0022  346F               	retlw	111	;'o'
   222  0023  346E               	retlw	110	;'n'
   223  0024  3461               	retlw	97	;'a'
   224  0025  3464               	retlw	100	;'d'
   225  0026  3461               	retlw	97	;'a'
   226  0027  340A               	retlw	10
   227  0028  3400               	retlw	0
   228  0029                     STR_2:
   229  0029  3453               	retlw	83	;'S'
   230  002A  3431               	retlw	49	;'1'
   231  002B  3420               	retlw	32	;' '
   232  002C  346C               	retlw	108	;'l'
   233  002D  3469               	retlw	105	;'i'
   234  002E  3462               	retlw	98	;'b'
   235  002F  3465               	retlw	101	;'e'
   236  0030  3472               	retlw	114	;'r'
   237  0031  3461               	retlw	97	;'a'
   238  0032  3464               	retlw	100	;'d'
   239  0033  3461               	retlw	97	;'a'
   240  0034  340A               	retlw	10
   241  0035  3400               	retlw	0
   242  0036                     STR_4:
   243  0036  3453               	retlw	83	;'S'
   244  0037  3432               	retlw	50	;'2'
   245  0038  3420               	retlw	32	;' '
   246  0039  346C               	retlw	108	;'l'
   247  003A  3469               	retlw	105	;'i'
   248  003B  3462               	retlw	98	;'b'
   249  003C  3465               	retlw	101	;'e'
   250  003D  3472               	retlw	114	;'r'
   251  003E  3461               	retlw	97	;'a'
   252  003F  3464               	retlw	100	;'d'
   253  0040  3461               	retlw	97	;'a'
   254  0041  340A               	retlw	10
   255  0042  3400               	retlw	0
   256                           
   257                           	psect	cinit
   258  07FC                     start_initialization:	
   259                           ; #config settings
   260                           
   261  07FC                     __initialization:
   262  07FC                     end_of_initialization:	
   263                           ;End of C runtime variable initialization code
   264                           
   265  07FC                     __end_of__initialization:
   266  07FC  0183               	clrf	3
   267  07FD  120A  118A  2F81   	ljmp	_main	;jump to C main() function
   268                           
   269                           	psect	cstackCOMMON
   270  0070                     __pcstackCOMMON:
   271  0070                     ?_setStringOnSerial:
   272  0070                     ??_setStringOnSerial:	
   273                           ; 1 bytes @ 0x0
   274                           
   275  0070                     ?_portsObserver:	
   276                           ; 1 bytes @ 0x0
   277                           
   278  0070                     ?_main:	
   279                           ; 1 bytes @ 0x0
   280                           
   281  0070                     setStringOnSerial@contador:	
   282                           ; 1 bytes @ 0x0
   283                           
   284                           
   285                           ; 2 bytes @ 0x0
   286  0070                     	ds	2
   287  0072                     setStringOnSerial@outputString:
   288                           
   289                           ; 1 bytes @ 0x2
   290  0072                     	ds	1
   291  0073                     ??_portsObserver:
   292  0073                     ??_main:	
   293                           ; 1 bytes @ 0x3
   294                           
   295                           
   296                           	psect	maintext
   297  0781                     __pmaintext:	
   298                           ; 1 bytes @ 0x3
   299 ;;
   300 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   301 ;;
   302 ;; *************** function _main *****************
   303 ;; Defined at:
   304 ;;		line 56 in file "parte_b_1.c"
   305 ;; Parameters:    Size  Location     Type
   306 ;;		None
   307 ;; Auto vars:     Size  Location     Type
   308 ;;		None
   309 ;; Return value:  Size  Location     Type
   310 ;;                  1    wreg      void 
   311 ;; Registers used:
   312 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   313 ;; Tracked objects:
   314 ;;		On entry : B00/0
   315 ;;		On exit  : 0/0
   316 ;;		Unchanged: 0/0
   317 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   318 ;;      Params:         0       0       0       0       0
   319 ;;      Locals:         0       0       0       0       0
   320 ;;      Temps:          0       0       0       0       0
   321 ;;      Totals:         0       0       0       0       0
   322 ;;Total ram usage:        0 bytes
   323 ;; Hardware stack levels required when called:    3
   324 ;; This function calls:
   325 ;;		_portsObserver
   326 ;; This function is called by:
   327 ;;		Startup code after reset
   328 ;; This function uses a non-reentrant model
   329 ;;
   330                           
   331                           
   332                           ;psect for function _main
   333  0781                     _main:
   334  0781                     l696:	
   335                           ;incstack = 0
   336                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   337                           
   338                           
   339                           ;parte_b_1.c: 59:     TXSTAbits.TX9 = 0;
   340  0781  1683               	bsf	3,5	;RP0=1, select bank1
   341  0782  1303               	bcf	3,6	;RP1=0, select bank1
   342  0783  1318               	bcf	24,6	;volatile
   343                           
   344                           ;parte_b_1.c: 60:     TXSTAbits.TXEN = 1;
   345  0784  1698               	bsf	24,5	;volatile
   346                           
   347                           ;parte_b_1.c: 61:     TXSTAbits.SYNC = 0;
   348  0785  1218               	bcf	24,4	;volatile
   349                           
   350                           ;parte_b_1.c: 62:     TXSTAbits.BRGH = 1;
   351  0786  1518               	bsf	24,2	;volatile
   352                           
   353                           ;parte_b_1.c: 64:     RCSTAbits.SPEN = 1;
   354  0787  1283               	bcf	3,5	;RP0=0, select bank0
   355  0788  1303               	bcf	3,6	;RP1=0, select bank0
   356  0789  1798               	bsf	24,7	;volatile
   357                           
   358                           ;parte_b_1.c: 67:     INTCONbits.PEIE = 1;
   359  078A  170B               	bsf	11,6	;volatile
   360                           
   361                           ;parte_b_1.c: 68:     INTCONbits.GIE = 1;
   362  078B  178B               	bsf	11,7	;volatile
   363                           
   364                           ;parte_b_1.c: 69:     PIE1bits.RCIE = 1;
   365  078C  1683               	bsf	3,5	;RP0=1, select bank1
   366  078D  1303               	bcf	3,6	;RP1=0, select bank1
   367  078E  168C               	bsf	12,5	;volatile
   368                           
   369                           ;parte_b_1.c: 72:     TRISBbits.TRISB0 = 0;
   370  078F  1006               	bcf	6,0	;volatile
   371                           
   372                           ;parte_b_1.c: 73:     TRISBbits.TRISB1 = 0;
   373  0790  1086               	bcf	6,1	;volatile
   374                           
   375                           ;parte_b_1.c: 74:     TRISBbits.TRISB2 = 0;
   376  0791  1106               	bcf	6,2	;volatile
   377                           
   378                           ;parte_b_1.c: 75:     TRISBbits.TRISB3 = 0;
   379  0792  1186               	bcf	6,3	;volatile
   380  0793                     l698:
   381                           
   382                           ;parte_b_1.c: 81:         TRISB=0x0F;
   383  0793  300F               	movlw	15
   384  0794  0086               	movwf	6	;volatile
   385  0795                     l700:
   386                           
   387                           ;parte_b_1.c: 83:         portsObserver();
   388  0795  120A  118A  27CB  120A  118A  	fcall	_portsObserver
   389  079A                     l702:
   390                           
   391                           ;parte_b_1.c: 85:         PORTB=0x00;
   392  079A  1283               	bcf	3,5	;RP0=0, select bank0
   393  079B  1303               	bcf	3,6	;RP1=0, select bank0
   394  079C  0186               	clrf	6	;volatile
   395  079D                     l704:
   396                           
   397                           ;parte_b_1.c: 86:         TRISB=0x00;
   398  079D  1683               	bsf	3,5	;RP0=1, select bank1
   399  079E  1303               	bcf	3,6	;RP1=0, select bank1
   400  079F  0186               	clrf	6	;volatile
   401  07A0  2F93               	goto	l698
   402  07A1  120A  118A  2800   	ljmp	start
   403  07A4                     __end_of_main:
   404                           
   405                           	psect	text1
   406  07CB                     __ptext1:	
   407 ;; *************** function _portsObserver *****************
   408 ;; Defined at:
   409 ;;		line 34 in file "parte_b_1.c"
   410 ;; Parameters:    Size  Location     Type
   411 ;;		None
   412 ;; Auto vars:     Size  Location     Type
   413 ;;		None
   414 ;; Return value:  Size  Location     Type
   415 ;;                  1    wreg      void 
   416 ;; Registers used:
   417 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   418 ;; Tracked objects:
   419 ;;		On entry : 0/0
   420 ;;		On exit  : 0/0
   421 ;;		Unchanged: 0/0
   422 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   423 ;;      Params:         0       0       0       0       0
   424 ;;      Locals:         0       0       0       0       0
   425 ;;      Temps:          0       0       0       0       0
   426 ;;      Totals:         0       0       0       0       0
   427 ;;Total ram usage:        0 bytes
   428 ;; Hardware stack levels used:    1
   429 ;; Hardware stack levels required when called:    2
   430 ;; This function calls:
   431 ;;		_setStringOnSerial
   432 ;; This function is called by:
   433 ;;		_main
   434 ;; This function uses a non-reentrant model
   435 ;;
   436                           
   437                           
   438                           ;psect for function _portsObserver
   439  07CB                     _portsObserver:
   440  07CB                     l682:	
   441                           ;incstack = 0
   442                           ; Regs used in _portsObserver: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   443                           
   444                           
   445                           ;parte_b_1.c: 35:     if(!PORTBbits.RB0){
   446  07CB  1283               	bcf	3,5	;RP0=0, select bank0
   447  07CC  1303               	bcf	3,6	;RP1=0, select bank0
   448  07CD  1806               	btfsc	6,0	;volatile
   449  07CE  2FD0               	goto	u91
   450  07CF  2FD1               	goto	u90
   451  07D0                     u91:
   452  07D0  2FE3               	goto	l32
   453  07D1                     u90:
   454  07D1                     l684:
   455                           
   456                           ;parte_b_1.c: 36:         setStringOnSerial("S1 pressionada\n");
   457  07D1  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   458  07D2  120A  118A  27A4  120A  118A  	fcall	_setStringOnSerial
   459  07D7                     l686:
   460                           
   461                           ;parte_b_1.c: 38:             if(PORTBbits.RB0){
   462  07D7  1283               	bcf	3,5	;RP0=0, select bank0
   463  07D8  1303               	bcf	3,6	;RP1=0, select bank0
   464  07D9  1C06               	btfss	6,0	;volatile
   465  07DA  2FDC               	goto	u101
   466  07DB  2FDD               	goto	u100
   467  07DC                     u101:
   468  07DC  2FD7               	goto	l686
   469  07DD                     u100:
   470  07DD                     l688:
   471                           
   472                           ;parte_b_1.c: 39:                 setStringOnSerial("S1 liberada\n");
   473  07DD  3021               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   474  07DE  120A  118A  27A4  120A  118A  	fcall	_setStringOnSerial
   475  07E3                     l32:	
   476                           ;parte_b_1.c: 43:       }
   477                           
   478                           
   479                           ;parte_b_1.c: 44:       if(!PORTBbits.RB1){
   480  07E3  1283               	bcf	3,5	;RP0=0, select bank0
   481  07E4  1303               	bcf	3,6	;RP1=0, select bank0
   482  07E5  1886               	btfsc	6,1	;volatile
   483  07E6  2FE8               	goto	u111
   484  07E7  2FE9               	goto	u110
   485  07E8                     u111:
   486  07E8  2FFB               	goto	l42
   487  07E9                     u110:
   488  07E9                     l690:
   489                           
   490                           ;parte_b_1.c: 45:           setStringOnSerial("S2 pressionada\n");
   491  07E9  3011               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
   492  07EA  120A  118A  27A4  120A  118A  	fcall	_setStringOnSerial
   493  07EF                     l692:
   494                           
   495                           ;parte_b_1.c: 47:               if(PORTBbits.RB1){
   496  07EF  1283               	bcf	3,5	;RP0=0, select bank0
   497  07F0  1303               	bcf	3,6	;RP1=0, select bank0
   498  07F1  1C86               	btfss	6,1	;volatile
   499  07F2  2FF4               	goto	u121
   500  07F3  2FF5               	goto	u120
   501  07F4                     u121:
   502  07F4  2FEF               	goto	l692
   503  07F5                     u120:
   504  07F5                     l694:
   505                           
   506                           ;parte_b_1.c: 48:                   setStringOnSerial("S2 liberada\n");
   507  07F5  302E               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
   508  07F6  120A  118A  27A4  120A  118A  	fcall	_setStringOnSerial
   509  07FB                     l42:	
   510                           ;parte_b_1.c: 49:                   break;
   511                           
   512  07FB  0008               	return
   513  07FC                     __end_of_portsObserver:
   514                           
   515                           	psect	text2
   516  07A4                     __ptext2:	
   517 ;; *************** function _setStringOnSerial *****************
   518 ;; Defined at:
   519 ;;		line 25 in file "parte_b_1.c"
   520 ;; Parameters:    Size  Location     Type
   521 ;;  outputString    1    wreg     PTR unsigned char 
   522 ;;		 -> STR_4(13), STR_3(16), STR_2(13), STR_1(16), 
   523 ;; Auto vars:     Size  Location     Type
   524 ;;  outputString    1    2[COMMON] PTR unsigned char 
   525 ;;		 -> STR_4(13), STR_3(16), STR_2(13), STR_1(16), 
   526 ;;  contador        2    0[COMMON] int 
   527 ;; Return value:  Size  Location     Type
   528 ;;                  1    wreg      void 
   529 ;; Registers used:
   530 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
   531 ;; Tracked objects:
   532 ;;		On entry : 0/0
   533 ;;		On exit  : 0/0
   534 ;;		Unchanged: 0/0
   535 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   536 ;;      Params:         0       0       0       0       0
   537 ;;      Locals:         3       0       0       0       0
   538 ;;      Temps:          0       0       0       0       0
   539 ;;      Totals:         3       0       0       0       0
   540 ;;Total ram usage:        3 bytes
   541 ;; Hardware stack levels used:    2
   542 ;; This function calls:
   543 ;;		Nothing
   544 ;; This function is called by:
   545 ;;		_portsObserver
   546 ;; This function uses a non-reentrant model
   547 ;;
   548                           
   549                           
   550                           ;psect for function _setStringOnSerial
   551  07A4                     _setStringOnSerial:
   552                           
   553                           ;incstack = 0
   554                           ; Regs used in _setStringOnSerial: [wreg-fsr0h+status,2+status,0+pclath]
   555                           ;setStringOnSerial@outputString stored from wreg
   556  07A4  00F2               	movwf	setStringOnSerial@outputString
   557  07A5                     l674:
   558                           
   559                           ;parte_b_1.c: 26:     int contador=0;
   560  07A5  01F0               	clrf	setStringOnSerial@contador
   561  07A6  01F1               	clrf	setStringOnSerial@contador+1
   562                           
   563                           ;parte_b_1.c: 27:     while(outputString[contador] != 0){
   564  07A7  2FBD               	goto	l680
   565  07A8                     l676:
   566                           
   567                           ;parte_b_1.c: 28:         TXREG = outputString[contador];
   568  07A8  0870               	movf	setStringOnSerial@contador,w
   569  07A9  0772               	addwf	setStringOnSerial@outputString,w
   570  07AA  0084               	movwf	4
   571  07AB  120A  118A  2003  120A  118A  	fcall	stringdir
   572  07B0  1283               	bcf	3,5	;RP0=0, select bank0
   573  07B1  1303               	bcf	3,6	;RP1=0, select bank0
   574  07B2  0099               	movwf	25	;volatile
   575  07B3                     l678:
   576                           
   577                           ;parte_b_1.c: 29:         contador++;
   578  07B3  3001               	movlw	1
   579  07B4  07F0               	addwf	setStringOnSerial@contador,f
   580  07B5  1803               	skipnc
   581  07B6  0AF1               	incf	setStringOnSerial@contador+1,f
   582  07B7  3000               	movlw	0
   583  07B8  07F1               	addwf	setStringOnSerial@contador+1,f
   584  07B9                     l25:	
   585                           ;parte_b_1.c: 30:         while(!PIR1bits.TXIF);
   586                           
   587  07B9  1E0C               	btfss	12,4	;volatile
   588  07BA  2FBC               	goto	u71
   589  07BB  2FBD               	goto	u70
   590  07BC                     u71:
   591  07BC  2FB9               	goto	l25
   592  07BD                     u70:
   593  07BD                     l680:
   594                           
   595                           ;parte_b_1.c: 27:     while(outputString[contador] != 0){
   596  07BD  0870               	movf	setStringOnSerial@contador,w
   597  07BE  0772               	addwf	setStringOnSerial@outputString,w
   598  07BF  0084               	movwf	4
   599  07C0  120A  118A  2003  120A  118A  	fcall	stringdir
   600  07C5  3A00               	xorlw	0
   601  07C6  1D03               	skipz
   602  07C7  2FC9               	goto	u81
   603  07C8  2FCA               	goto	u80
   604  07C9                     u81:
   605  07C9  2FA8               	goto	l676
   606  07CA                     u80:
   607  07CA                     l29:
   608  07CA  0008               	return
   609  07CB                     __end_of_setStringOnSerial:
   610  007E                     btemp	set	126	;btemp
   611  007E                     wtemp0	set	126
   612                           
   613                           	psect	config
   614                           
   615                           ;Config register CONFIG @ 0x2007
   616                           ;	Oscillator Selection bits
   617                           ;	FOSC = XT, XT oscillator
   618                           ;	Watchdog Timer Enable bit
   619                           ;	WDTE = OFF, WDT disabled
   620                           ;	Power-up Timer Enable bit
   621                           ;	PWRTE = OFF, PWRT disabled
   622                           ;	Brown-out Reset Enable bit
   623                           ;	BOREN = OFF, BOR disabled
   624                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   625                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   626                           ;	Data EEPROM Memory Code Protection bit
   627                           ;	CPD = OFF, Data EEPROM code protection off
   628                           ;	Flash Program Memory Write Enable bits
   629                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   630                           ;	In-Circuit Debugger Mode bit
   631                           ;	DEBUG = 0x1, unprogrammed default
   632                           ;	Flash Program Memory Code Protection bit
   633                           ;	CP = OFF, Code protection off
   634  2007                     	org	8199
   635  2007  3F39               	dw	16185

Data Sizes:
    Strings     58
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      3       3
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    setStringOnSerial@outputString	PTR unsigned char  size(1) Largest target is 16
		 -> STR_4(CODE[13]), STR_3(CODE[16]), STR_2(CODE[13]), STR_1(CODE[16]), 


Critical Paths under _main in COMMON

    _portsObserver->_setStringOnSerial

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     222
                      _portsObserver
 ---------------------------------------------------------------------------------
 (1) _portsObserver                                        0     0      0     222
                  _setStringOnSerial
 ---------------------------------------------------------------------------------
 (3) _setStringOnSerial                                    3     3      0     222
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _portsObserver
     _setStringOnSerial

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      3       3       1       21.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Fri Apr 23 18:16:30 2021

                            pc 0002                             l32 07E3                             l25 07B9  
                           l42 07FB                             l29 07CA                             u70 07BD  
                           u71 07BC                             u80 07CA                             u81 07C9  
                           u90 07D1                             u91 07D0                             fsr 0004  
                          l700 0795                            l702 079A                            l704 079D  
                          l680 07BD                            l674 07A5                            l690 07E9  
                          l682 07CB                            l676 07A8                            l692 07EF  
                          l684 07D1                            l678 07B3                            l694 07F5  
                          l686 07D7                            l688 07DD                            l696 0781  
                          l698 0793                            u100 07DD                            u101 07DC  
                          u110 07E9                            u111 07E8                            u120 07F5  
                          u121 07F4                            fsr0 0004              _setStringOnSerial 07A4  
           ?_setStringOnSerial 0070                           STR_1 0009                           STR_2 0029  
                         STR_3 0019                           STR_4 0036                           _main 0781  
                         btemp 007E                 ?_portsObserver 0070            ??_setStringOnSerial 0070  
                         start 0000                          ?_main 0070                          _PORTB 0006  
    __end_of_setStringOnSerial 07CB                          _TRISB 0086                          _TXREG 0019  
                        pclath 000A                          status 0003                          wtemp0 007E  
              __initialization 07FC                   __end_of_main 07A4                         ??_main 0073  
              ??_portsObserver 0073  setStringOnSerial@outputString 0072     __size_of_setStringOnSerial 0027  
      __end_of__initialization 07FC                 __pcstackCOMMON 0070                     __pmaintext 0781  
                   __stringtab 0003                        __ptext1 07CB                        __ptext2 07A4  
         end_of_initialization 07FC                      _RCSTAbits 0018                      _PORTBbits 0006  
                    _TRISBbits 0086      setStringOnSerial@contador 0070          __end_of_portsObserver 07FC  
                    _TXSTAbits 0098            start_initialization 07FC                      ___latbits 0002  
                    __pstrings 0003                       _PIE1bits 008C                       _PIR1bits 000C  
                  __stringbase 0008             __end_of__stringtab 0009                  __size_of_main 0023  
       __size_of_portsObserver 0031                     _INTCONbits 000B                      stringcode 0003  
                     stringdir 0003                       stringtab 0003                  _portsObserver 07CB  
